version: "3.9"

services:
  celery:
    container_name: django-nextjs-celery
    build:
      context: ../
      target: production
      dockerfile: ./server/Dockerfile
    restart: always
    command: celery -A core worker -l info
    env_file:
      - ../.env
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - DATABASE_URL=postgresql://postgres:postgres@192.168.0.2:5432/postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=192.168.0.2
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=dj4ng0_sup3r_s3cr3t_k3y
      - DJANGO_DEBUG=1
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_BACKEND=redis://redis:6379/0
    volumes:
      - ../server/:/usr/src/app/
    depends_on:
      - redis
      - db
      - rabbitmq
      - backend
    networks:
      app_net:
        ipv4_address: 192.168.0.7

  backend:
    container_name: django-nextjs-backend
    build:
      context: ../
      target: production
      dockerfile: ./server/Dockerfile
    restart: always
    command: uvicorn app.asgi:application --host 0.0.0.0 --port 8000 --workers 4 --log-level debug --reload
    expose:
      - 8000
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.production
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - DATABASE_URL=postgresql://postgres:postgres@192.168.0.2:5432/postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=192.168.0.2
      - POSTGRES_PORT=5432
      - DJANGO_SECRET_KEY=dj4ng0_sup3r_s3cr3t_k3y
      - DJANGO_DEBUG=1
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_BACKEND=redis://redis:6379/0
    volumes:
      - ../server/:/usr/src/app/
    depends_on:
      - redis
      - db
      - rabbitmq
    links:
      - redis
      - db
      - rabbitmq
    networks:
      app_net:
        ipv4_address: 192.168.0.8

  frontend:
    container_name: django-nextjs-frontend
    build:
      context: ../
      target: production
      dockerfile: ./frontend/Dockerfile
    restart: always
    image: nextjs-container
    ports:
      - "3000:3000"
    depends_on:
      - backend
    links:
      - backend
    networks:
      app_net:
        ipv4_address: 192.168.0.9

  nginx:
    container_name: django-nextjs-nginx
    build:
      context: ../
      dockerfile: ./nginx/Dockerfile
    restart: always
    ports:
      - ${NGINX_PORT}:8080
    depends_on:
      - backend
      - frontend
    links:
      - backend
      - frontend
    networks:
      app_net:
        ipv4_address: 192.168.0.10

volumes:
  django-nextjs-data:

